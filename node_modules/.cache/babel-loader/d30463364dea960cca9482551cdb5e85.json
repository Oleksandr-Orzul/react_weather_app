{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u043B\\u0435\\u043A\\u0441\\u0430\\u043D\\u0434\\u0440\\\\Desktop\\\\react-weather-app\\\\src\\\\WeatherForecast.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport \"./WeatherForecast.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WeatherForecast(props) {\n  _s();\n  const [ready, setReady] = useState(false);\n  function response(response) {\n    setReady(true);\n  }\n  if (ready) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"WeatherForecast\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"WeatherForecastDay\",\n            children: \"Thu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }, this), \"  \", /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"WeatherForecastIMG\",\n            src: props.weatherData.iconUrl,\n            alt: props.weatherData.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 60\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"WeatherForecastTemp\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"maxTemp\",\n              children: \"19\\xB0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 209\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"minTemp\",\n              children: \"10\\xB0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 246\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 171\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 34\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this);\n  } else {\n    let lon = props.weatherData.cordinates.lon;\n    let lat = props.weatherData.cordinates.lat;\n    let apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&appid=b0ce35cd54f47a37e37cfe580baaccdd&units=metric`;\n    axios.get(apiUrl).then(response);\n    return null;\n  }\n}\n_s(WeatherForecast, \"BzBEqQ23qUQXTvnWxdhMoI6dpVw=\");\n_c = WeatherForecast;\nvar _c;\n$RefreshReg$(_c, \"WeatherForecast\");","map":{"version":3,"names":["axios","useState","WeatherForecast","props","ready","setReady","response","weatherData","iconUrl","description","lon","cordinates","lat","apiUrl","get","then"],"sources":["C:/Users/Александр/Desktop/react-weather-app/src/WeatherForecast.js"],"sourcesContent":["import axios from \"axios\"\r\nimport { useState } from \"react\"\r\nimport \"./WeatherForecast.css\"\r\n\r\nexport default function WeatherForecast(props){\r\n    const [ready,setReady]=useState(false)\r\n    function response (response){\r\n        setReady(true)\r\n\r\n    }\r\n   \r\n\r\n    if(ready){\r\n    return (\r\n        <div className=\"WeatherForecast\">\r\n            <div className=\"row\"><div className=\"col\"> \r\n            <div className=\"WeatherForecastDay\">Thu</div>  <img className=\"WeatherForecastIMG\" src={props.weatherData.iconUrl} alt={props.weatherData.description}></img> <div className=\"WeatherForecastTemp\"> <span className=\"maxTemp\">19°</span> <span className=\"minTemp\">10°</span></div></div> </div> </div>\r\n)}else{\r\n\r\n    let lon=props.weatherData.cordinates.lon\r\n    let lat=props.weatherData.cordinates.lat\r\n    let apiUrl=`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&appid=b0ce35cd54f47a37e37cfe580baaccdd&units=metric`\r\n    axios.get(apiUrl).then(response)\r\nreturn null\r\n}\r\n\r\n\r\n\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAO,uBAAuB;AAAA;AAE9B,eAAe,SAASC,eAAe,CAACC,KAAK,EAAC;EAAA;EAC1C,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAACJ,QAAQ,CAAC,KAAK,CAAC;EACtC,SAASK,QAAQ,CAAEA,QAAQ,EAAC;IACxBD,QAAQ,CAAC,IAAI,CAAC;EAElB;EAGA,IAAGD,KAAK,EAAC;IACT,oBACI;MAAK,SAAS,EAAC,iBAAiB;MAAA,wBAC5B;QAAK,SAAS,EAAC,KAAK;QAAA,wBAAC;UAAK,SAAS,EAAC,KAAK;UAAA,wBACzC;YAAK,SAAS,EAAC,oBAAoB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAU,qBAAE;YAAK,SAAS,EAAC,oBAAoB;YAAC,GAAG,EAAED,KAAK,CAACI,WAAW,CAACC,OAAQ;YAAC,GAAG,EAAEL,KAAK,CAACI,WAAW,CAACE;UAAY;YAAA;YAAA;YAAA;UAAA,QAAO,oBAAC;YAAK,SAAS,EAAC,qBAAqB;YAAA,6BAAE;cAAM,SAAS,EAAC,SAAS;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAW,oBAAC;cAAM,SAAS,EAAC,SAAS;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAW;UAAA;YAAA;YAAA;YAAA;UAAA,QAAM;QAAA;UAAA;UAAA;UAAA;QAAA,QAAM;MAAA;QAAA;QAAA;QAAA;MAAA,QAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QAAO;EAClT,CAAC,MAAI;IAEF,IAAIC,GAAG,GAACP,KAAK,CAACI,WAAW,CAACI,UAAU,CAACD,GAAG;IACxC,IAAIE,GAAG,GAACT,KAAK,CAACI,WAAW,CAACI,UAAU,CAACC,GAAG;IACxC,IAAIC,MAAM,GAAE,uDAAsDD,GAAI,QAAOF,GAAI,sDAAqD;IACtIV,KAAK,CAACc,GAAG,CAACD,MAAM,CAAC,CAACE,IAAI,CAACT,QAAQ,CAAC;IACpC,OAAO,IAAI;EACX;AAIA;AAAC,GAxBuBJ,eAAe;AAAA,KAAfA,eAAe;AAAA;AAAA"},"metadata":{},"sourceType":"module"}